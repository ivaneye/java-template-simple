<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd ">

	<!--通过tomcat配置Resource来配置数据源-->
	<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/blogDatabase"/>-->

	<!--配置数据源-->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
	<!--<bean id="dataSource" class="com.webapp.util.AppDataSource">-->
        <property name="maxOpenPreparedStatements" value="3"/>
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/blog?characterEncoding=utf8" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>

	<!--配置mybatis sqlSessionFactory-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:com/mybatis/config/**/*.xml" />
	</bean>

	<!--配置sqlSession-->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!--配置事务-->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--注解驱动事务-->
	<tx:annotation-driven transaction-manager="transactionManager"/>

    <!--基于规约由于配置来进行事务管理-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            &lt;!&ndash;所有以query开头的方法都是只读的 &ndash;&gt;
            <tx:method name="query*" read-only="true" />
            &lt;!&ndash;其他方法使用默认事务策略 &ndash;&gt;
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>
    &lt;!&ndash; AOP配置 &ndash;&gt;
    <aop:config>
        <aop:pointcut id="myPointcut" expression="execution(* com.webapp.service.*.*(..))" />
        &lt;!&ndash;将定义好的事务处理策略应用到上述的切入点 &ndash;&gt;
        <aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut" />
    </aop:config>-->

</beans>